var endpoint;

// Register a Service Worker.
navigator.serviceWorker.register('service-worker.js')
.then(function (registration) {
    if(registration.installing) {
      console.log('Service worker installing');
    } else if(registration.waiting) {
      console.log('Service worker installed');
    } else if(registration.active) {
      console.log('Service worker active');
    }
    // Use the PushManager to get the user's subscription to the push service.
    return registration.pushManager.getSubscription()
        .then(function (subscription) {
            // If a subscription was found, return it.
            if (subscription) {
                return subscription;
            }

            // Otherwise, subscribe the user (userVisibleOnly allows to specify that we don't plan to
            // send notifications that don't have a visible effect for the user).
            return registration.pushManager.subscribe({
                userVisibleOnly: true
            });
        });
}).then(function (subscription) {
    endpoint = subscription.endpoint;
    console.log('endpoint', endpoint);

    // Send the subscription details to the server using the Fetch API.
    fetch('./register', {
        method: 'post',
        headers: {
            'Content-type': 'application/json'
        },
        body: JSON.stringify({
            endpoint: subscription.endpoint,
        }),
    });
}).catch(function(error) {
    if (Notification.permission === 'denied') {
        // ユーザが通知承認リクエストを拒否した場合。
        // メッセージ受信を失敗したことになり、以降、ユーザはプッシュ通知を受信するために手動で通知承認を変更する必要がある。
        console.log('Permission for Notifications was denied');
    } else {
        // 問題が発生した場合
        // gcm_sender_id がない、またはgcm_user_visible_onlyの場合などに発生
        console.log(error);
    }
});

document.getElementById('doIt').onclick = function () {
    var delay = document.getElementById('notification-delay').value;

    // Ask the server to send the client a notification (for testing purposes, in real
    // applications the notification will be generated by some event on the server).
    fetch('./sendNotification?endpoint=' + endpoint + '&delay=' + delay, {
        method: 'post',
    });
};
